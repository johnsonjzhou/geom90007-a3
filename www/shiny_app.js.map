{"version":3,"file":"shiny_app.js","mappings":";qCAGA,ICsBMA,EAAmB,SAACC,GAA+B,IAAxBC,IAAwB,yDACjDC,EAASC,SAASC,cAAc,kCAKtC,OAJAJ,GAASA,EAAMK,UAAUC,OAAO,UAChCN,GAASC,GAAgBC,EAAOG,UAAUC,OAAO,OAEjDJ,EAAOK,YAAYL,EAAOM,WAAU,KAC7B,CACR,qPC/BD,m6MAWA,IAAMC,EAAU,gCAAG,WAAOC,GAAP,6EAajB,IAASC,KAXHC,EAAM,IAAIC,IAAI,8CAGdC,EAAS,CACb,OAAU,OACV,aAAgB,KAChB,QAAW,0CACX,QAAW,IACX,EAAKJ,GAILE,EAAIG,aAAaC,OAAOL,EAAOG,EAAOH,IAdvB,OAiBjBM,QAAQC,IAAR,qBAA0BN,IAjBT,SAmBWO,MAAMP,GACjCQ,MAAK,SAACC,GACL,GAAqB,KAAjBA,EAAOC,OAAiB,MAAM,IAAIC,MAAM,uBAC5C,OAAOF,EAAOG,MACf,IACAJ,MAAK,SAACI,GACL,OAAOA,CACR,IACAC,OAAM,SAACC,GAEN,OADAT,QAAQC,IAAR,0BAA+BQ,IACxB,EACR,IA9BgB,cAmBXC,EAnBW,OAgCjBV,QAAQC,IAAR,iBAA8BS,GAhCb,kBAiCVA,GAjCU,yNAAH,ySCXhB,m6MASA,IAAMC,EAAoB,WACxB,IAAM5B,EAAQG,SAASC,cAAc,mCACnCJ,EAAMK,UAAUwB,SAAS,WACpB9B,EAAiBC,IFHH,SAACA,GAA+B,IAAxBC,IAAwB,yDAC/CC,EAASC,SAASC,cAAc,kCACtCJ,GAASA,EAAMK,UAAUyB,IAAI,UAC7B9B,GAASC,GAAgBC,EAAOG,UAAUyB,IAAI,OAE9C5B,EAAO6B,iBAAiB,SAAS,kBAAMhC,EAAiBC,EAAvB,GAElC,CEJmCgC,CAAehC,EAClD,EAKKiC,EAAe,gCAAG,6FAEhBvB,EAAQP,SAAS+B,eAAe,gBAAgBC,MAFhC,SAKA1B,EAAWC,GALX,OAKhB0B,EALgB,OAQtBC,OAASA,MAAMC,cAAc,gBAAiBF,GARxB,yNAAH,gKCTrB,SAAEG,EAAGC,GAIHA,EAAEC,mBAAqB,SAACC,GAGtB,OAFAC,OAAOC,SAAW,IAAIJ,EAAEK,mBAAmBH,GAC3CzB,QAAQC,IAAI,WAAYyB,OAAOC,UACxBD,OAAOC,QACf,EAEDD,OAAOG,OAAS,WJfhBC,UAAUC,UAAUC,SAAS,gBAC3BN,OAAOO,MAAM,oDIgBbP,OAAOQ,OAAS1C,EAEZkC,OAAOH,EAAEC,qBACXE,OAAOH,EAAEC,mBAAqB,SAACC,GAG7B,OAFAC,OAAOC,SAAW,IAAIJ,EAAEK,mBAAmBH,GAC3CzB,QAAQC,IAAI,WAAYyB,OAAOC,UACxBD,OAAOC,QACf,EACD3B,QAAQC,IAAI,KAGf,EAGDqB,EAAEpC,UAAUiD,GAAG,4BAA4B,SAACC,GDA5ClD,SAAS+B,eAAe,qBAAqBH,iBAC3C,QAASH,GAIXzB,SAAS+B,eAAe,iBAAiBH,iBACvC,QAASE,GEjCiB,WAC5BhB,QAAQC,IAAI,gCACZ,IAFkC,g6BAEnBf,SAASmD,uBAAuB,kBAFb,IAGlC,IAAK,EAAL,qBAA4B,KAAjBC,EAAiB,QAC1B,IACE,IAAMpB,EAAQqB,WAAWD,EAAME,WAC9BtB,EAAQ,IAAOoB,EAAME,UAAN,UAAqBC,SAAiB,IAARvB,GAA9B,OACfA,GAAS,IAAOoB,EAAME,UAAN,UAAqBC,SAASvB,GAA9B,OAGlB,CAFC,MAAOT,GACP,QACD,CACF,CAXiC,+BAYnC,CDiBGiC,EACD,GA7BH,EA+BGpB,EAAGC","sources":["webpack://geom90007-a2/./src/js/user_agent.js","webpack://geom90007-a2/./src/js/events.js","webpack://geom90007-a2/./src/js/search.js","webpack://geom90007-a2/./src/js/buttons.js","webpack://geom90007-a2/./src/js/_build.js","webpack://geom90007-a2/./src/js/ui.js"],"sourcesContent":["/**\n  Checks the user agent and loads a helpful message\n */\nconst check_user_agent = () => {\n  // pop up message for WebQTEngine browsers (built in)\n  navigator.userAgent.includes(\"QtWebEngine\") &&\n    window.alert(\"For best effect, please use an external browser.\");\n};\n\nexport {\n  check_user_agent\n};","/**\n  Handling of reactive event messages from Shiny\n */\n\n/**\n  Opens a tabPanel while adding effects\n  @param {DOMElement} panel a DOM element representing a Shiny tabPanel\n  @param {boolean} [dimmer=true] whether to toggle dimmer panel\n  @return {boolean} True\n */\nconst activate_panel = (panel, apply_dimmer = true) => {\n  const dimmer = document.querySelector(\"[data-value='Dimmer'].tab-pane\");\n  panel && panel.classList.add(\"active\");\n  panel && apply_dimmer && dimmer.classList.add(\"dim\");\n  // Click the dimmer panel to close the panel\n  dimmer.addEventListener(\"click\", () => deactivate_panel(panel));\n  return true;\n}\n\n/**\n  Closes a tabPanel while adding effects\n  @param {DOMElement} panel a DOM element representing a Shiny tabPanel\n  @param {boolean} [dimmer=true] whether to toggle dimmer panel\n  @return {boolean} True\n */\nconst deactivate_panel = (panel, apply_dimmer = true) => {\n  const dimmer = document.querySelector(\"[data-value='Dimmer'].tab-pane\");\n  panel && panel.classList.remove(\"active\");\n  panel && apply_dimmer && dimmer.classList.remove(\"dim\");\n  // Remove all event listeners on dimmer panel\n  dimmer.replaceWith(dimmer.cloneNode(true))\n  return true;\n}\n\n/**\n  Loads and binds event handlers for Shiny custom messages\n  @return void\n */\nconst load_event_handlers = () => {\n  // Insert handlers here\n}\n\nexport {\n  activate_panel,\n  deactivate_panel,\n  load_event_handlers\n};\n","/**\n  Handle search functions\n */\n\n/**\n  Query the openstreetmaps nominatim API with the query term\n  bounded by Melbourne coordinates\n  @param {string} query The search query.\n  @return {array} An array of objects returned from the API.\n  @note Response will return empty array if non-found or error.\n  @see https://nominatim.org/release-docs/develop/api/Search/\n */\nconst search_osm = async (query) => {\n  // The URL endpoint\n  const url = new URL(\"https://nominatim.openstreetmap.org/search\");\n  \n  // Append params to the url\n  const params = {\n    \"format\": \"json\",\n    \"countrycodes\": \"au\",\n    \"viewbox\": \"144.93366,-37.79264,144.97670,-37.82391\",\n    \"bounded\": \"1\",\n    \"q\": query\n  }\n  \n  for (let param in params) {\n    url.searchParams.append(param, params[param])\n  }\n  \n  console.log(`Query URL: ${url}`)\n  \n  const response_json = await fetch(url)\n  .then((result) => {\n    if (result.status != 200) { throw new Error(\"Bad Server Response\"); }\n    return result.json();\n  })\n  .then((json) => {\n    return json\n  })\n  .catch((error) => {\n    console.log(`Error in query: ${error}`)\n    return []\n  });\n  \n  console.log(`Response JSON:`, response_json);\n  return response_json\n}\n\nexport {\n  search_osm\n}","/**\n  Handling of button clicks in JS\n */\nimport { activate_panel, deactivate_panel } from \"./events.js\"\nimport { search_osm } from \"./search.js\";\n\n/**\n  Shows and hides the Filters panel\n  @return void\n */\nconst filters_show_hide = () => {\n  const panel = document.querySelector(\"[data-value='Filters'].tab-pane\");\n    panel.classList.contains(\"active\")\n      && deactivate_panel(panel) || activate_panel(panel)\n}\n\n/**\n  On click event handler for the search box button\n */\nconst search_panel_go = async () => {\n  // Get the search query from the search input box\n  const query = document.getElementById(\"search-input\").value;\n  \n  // Query the API\n  const results = await search_osm(query);\n  \n  // Send the results to Shiny\n  Shiny && Shiny.setInputValue(\"search_result\", results);\n}\n\n/**\n  Binds actions to custom buttons\n  @return void\n */\nconst bind_button_actions = () => {\n  // Filters panel toggle\n  document.getElementById(\"filters-show-hide\").addEventListener(\n    \"click\", filters_show_hide\n  )\n  \n  // Search panel go button\n  document.getElementById(\"button-search\").addEventListener(\n    \"click\", search_panel_go\n  )\n}\n\nexport {\n  bind_button_actions\n};\n","/**\n  Scripts used in the Shiny app\n */\n\nimport { check_user_agent } from \"./user_agent.js\";\nimport { load_event_handlers } from \"./events.js\";\nimport { bind_button_actions } from \"./buttons\";\nimport { slider_context_labels } from \"./ui.js\";\nimport { search_osm } from \"./search.js\";\n\n(($, L) => {\n  \n  load_event_handlers();\n  \n  L.markerClusterGroup = (options) => {\n    window.clusters = new L.MarkerClusterGroup(options);\n    console.log(\"Clusters\", window.clusters);\n    return window.clusters;\n  }\n  \n  window.onload = () => {\n    check_user_agent();\n    window.search = search_osm\n    \n    if (window.L.markerClusterGroup) {\n      window.L.markerClusterGroup = (options) => {\n        window.clusters = new L.MarkerClusterGroup(options);\n        console.log(\"Clusters\", window.clusters);\n        return window.clusters;\n      }\n      console.log(\"L\");\n      // Object.freeze(window.L);\n    }\n  }\n  \n  // When shiny has loaded\n  $(document).on(\"shiny:sessioninitialized\", (event) => {\n    bind_button_actions();\n    slider_context_labels();\n  })\n  \n})($, L)","/**\n  UI related scripts\n */\n\n\n/**\n  Updates labels on the Radius slider to be more context friendly\n  @return {void}\n */\nconst slider_context_labels = () => {\n  console.log(\"Update slider context labels\");\n  const labels = document.getElementsByClassName(\"irs-grid-text\");\n  for (const label of labels) {\n    try {\n      const value = parseFloat(label.innerHTML);\n      (value < 1) && (label.innerHTML = `${parseInt(value * 1000)} m`);\n      (value >= 1) && (label.innerHTML = `${parseInt(value)} km`);\n    } catch (error) {\n      continue;\n    }\n  }\n}\n\nexport {\n  slider_context_labels\n}"],"names":["deactivate_panel","panel","apply_dimmer","dimmer","document","querySelector","classList","remove","replaceWith","cloneNode","search_osm","query","param","url","URL","params","searchParams","append","console","log","fetch","then","result","status","Error","json","catch","error","response_json","filters_show_hide","contains","add","addEventListener","activate_panel","search_panel_go","getElementById","value","results","Shiny","setInputValue","$","L","markerClusterGroup","options","window","clusters","MarkerClusterGroup","onload","navigator","userAgent","includes","alert","search","on","event","getElementsByClassName","label","parseFloat","innerHTML","parseInt","slider_context_labels"],"sourceRoot":""}